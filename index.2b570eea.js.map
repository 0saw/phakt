{"mappings":"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","sources":["src/index.ts"],"sourcesContent":["const WIDTH = 100\nconst HEIGHT = 100\nconst PIECES_X = 3\nconst PIECES_Y = 3\n\nconst HALF_WIDTH = WIDTH / 2\nconst HALF_HEIGHT = HEIGHT / 2\nconst IMAGE_WIDTH = WIDTH * PIECES_X\nconst IMAGE_HEIGHT = HEIGHT * PIECES_Y\n\nconst getPiece = (src: string, x: number, y: number): HTMLDivElement => {\n  const piece = document.createElement('div')\n\n  piece.className = 'piece'\n  piece.style.cssText = `\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: ${WIDTH}px;\n    height: ${HEIGHT}px;\n    background-image: url(${src});\n    background-position: ${-1 * WIDTH * x}px ${-1 * HEIGHT * y}px;\n    background-size: ${PIECES_X * 100}% ${PIECES_Y * 100}%;\n    transform: translate(0, 0);\n    pointer-events: none;\n  `\n\n  return piece\n}\n\nconst distance = (\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number\n): number => {\n  return ((x1 - x2) ** 2 + (y1 - y2) ** 2) ** 0.5\n}\n\nwindow.addEventListener('contextmenu', function (e) { e.preventDefault() })\n\nlet zIndex = 1\n\nvoid (async () => {\n  const game = document.querySelector<HTMLDivElement>('.game')\n  const gameArea = document.querySelector<HTMLDivElement>('.game__area')\n  const bag = document.querySelector<HTMLDivElement>('.game__bag')\n\n  if (game === null || gameArea === null || bag === null) {\n    return\n  }\n\n  gameArea.style.width = `${PIECES_X * WIDTH}px`\n  gameArea.style.height = `${PIECES_Y * HEIGHT}px`\n\n  const pieces = new Array<HTMLDivElement>()\n  for (let y = 0; y < PIECES_Y; y++) {\n    for (let x = 0; x < PIECES_X; x++) {\n      pieces.push(getPiece(`${process.env.RANDOM_IMAGE_SERVICE}/${IMAGE_WIDTH}/${IMAGE_HEIGHT}`, x, y))\n    }\n  }\n\n  const placedPieces = new Array<HTMLDivElement | null>(pieces.length).fill(null)\n  const piecesBag = [...pieces]\n  piecesBag.sort(() => 0.5 - Math.random())\n  bag.innerText = `x${piecesBag.length}`\n\n  game.addEventListener('pointerdown', (e) => {\n    console.log(`pointerdown ${e.type}`)\n    e.preventDefault()\n    let piece: HTMLDivElement\n    let grabOffsetX = -HALF_WIDTH\n    let grabOffsetY = -HALF_HEIGHT\n    const bagRect = bag.getBoundingClientRect()\n    const gameAreaRect = gameArea.getBoundingClientRect()\n    const isInBag = (x: number, y: number): boolean => x >= bagRect.left && x <= bagRect.right && y >= bagRect.top && y <= bagRect.bottom\n\n    if (e.target instanceof HTMLDivElement && e.target.classList.contains('piece')) {\n      piece = e.target\n      grabOffsetX = -e.offsetX\n      grabOffsetY = -e.offsetY\n\n      if (placedPieces.includes(piece)) {\n        placedPieces[placedPieces.indexOf(piece)] = null\n      }\n    } else {\n      if (e.target !== bag) {\n        return\n      }\n\n      const nextPiece = piecesBag.pop()\n      bag.innerText = `x${piecesBag.length}`\n\n      if (typeof nextPiece !== 'undefined') {\n        piece = nextPiece\n        game.append(nextPiece)\n      } else {\n        return\n      }\n    }\n\n    piece.style.zIndex = `${zIndex++}`\n\n    const update = (e: PointerEvent): void => {\n      console.log(`update ${e.type}`)\n      bag.classList.toggle('game__bag--active', isInBag(e.x, e.y))\n\n      piece.style.transform = `translate(${Math.min(window.innerWidth - WIDTH, Math.max(0, e.x + grabOffsetX))}px, ${Math.min(window.innerHeight - HEIGHT, Math.max(0, e.y + grabOffsetY))}px)`\n    }\n    update(e)\n\n    const stop = (e: PointerEvent): void => {\n      console.log(`stop ${e.type}`)\n      e.stopPropagation()\n      e.stopImmediatePropagation()\n      game.removeEventListener('pointermove', update)\n      game.removeEventListener('pointerout', onPointerOutStop)\n      game.removeEventListener('pointerup', stop)\n\n      const isMouseInBag = isInBag(e.x, e.y)\n\n      piece.style.pointerEvents = isMouseInBag ? 'none' : ''\n\n      if (isMouseInBag) {\n        piecesBag.unshift(piece)\n        piece.remove()\n\n        bag.classList.remove('game__bag--active')\n      }\n      bag.innerText = `x${piecesBag.length}`\n\n      const centerX = e.x + grabOffsetX + HALF_WIDTH - gameAreaRect.x\n      const centerY = e.y + grabOffsetY + HALF_WIDTH - gameAreaRect.y\n      const areaX = Math.floor(centerX / gameAreaRect.width * PIECES_X)\n      const areaY = Math.floor(centerY / gameAreaRect.height * PIECES_Y)\n\n      if (\n        placedPieces[areaY * PIECES_Y + areaX] === null &&\n          centerX >= 0 && centerX <= gameAreaRect.width && centerY >= 0 && centerY <= gameAreaRect.height &&\n          distance(\n            areaX * WIDTH + HALF_WIDTH,\n            areaY * HEIGHT + HALF_HEIGHT,\n            centerX,\n            centerY\n          ) < 24\n      ) {\n        placedPieces[areaY * PIECES_Y + areaX] = piece\n        piece.style.transform = `translate(${gameAreaRect.left + areaX * WIDTH}px, ${gameAreaRect.top + areaY * HEIGHT}px)`\n      }\n\n      if (placedPieces.every((piece, index) => pieces[index] === piece)) {\n        setTimeout(() => alert('Win, lmao'), 10)\n      }\n\n      grabOffsetX = -HALF_WIDTH\n      grabOffsetY = -HALF_HEIGHT\n    }\n\n    const onPointerOutStop = (e: PointerEvent): void => {\n      if (e.relatedTarget === document.documentElement) {\n        stop(e)\n      }\n    }\n\n    game.addEventListener('pointermove', update)\n    game.addEventListener('pointerout', onPointerOutStop)\n    game.addEventListener('pointerup', stop)\n  })\n})()\n\nexport {}\n"],"names":["$559c39b934b932c4$var$WIDTH","$559c39b934b932c4$var$HEIGHT","$559c39b934b932c4$var$getPiece","src","x","y","piece","document","createElement","className","style","cssText","window","addEventListener","e","preventDefault","$559c39b934b932c4$var$zIndex","game","querySelector","gameArea","bag","width","height","pieces","Array","push","placedPieces","length","fill","piecesBag","sort","Math","random","innerText","console","log","type","grabOffsetX","grabOffsetY","bagRect","getBoundingClientRect","gameAreaRect","isInBag","left","right","top","bottom","target","HTMLDivElement","classList","contains","offsetX","offsetY","includes","indexOf","nextPiece","pop","append","zIndex","update","toggle","transform","min","innerWidth","max","innerHeight","stop","stopPropagation","stopImmediatePropagation","removeEventListener","onPointerOutStop","isMouseInBag","pointerEvents","unshift","remove","centerX","centerY","areaX","floor","areaY","every","index","setTimeout","alert","relatedTarget","documentElement"],"version":3,"file":"index.2b570eea.js.map"}